def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.umeng.soexample"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        manifestPlaceholders = [qqappid: "1112081613"]

        ndk { //PushSDK目前只支持4种架构
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }


    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
//    implementation fileTree(include: ['*.jar','*.aar'], dir: 'libs')
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    api 'com.umeng.umsdk:common:9.3.8'
    api 'com.umeng.umsdk:asms:1.2.2'

//    api 'com.umeng.umsdk:common:9.4.4'
//    api 'com.umeng.umsdk:asms:1.4.1'
//    api files('libs/umeng-common-9.4.4.jar')
//    api files('libs/umeng-asms-armeabi-v1.4.1.aar')
//    api files('libs/umeng-abtest-v1.0.0.aar')
//    implementation(name:'umeng-asms-armeabi-v1.4.1', ext:'aar')

//    api 'com.umeng.umsdk:common:9.3.8'
//    api 'com.umeng.umsdk:asms:1.2.2'


    implementation  'com.umeng.umsdk:share-core:7.1.7'//分享核心库，必选
    implementation  'com.umeng.umsdk:share-board:7.1.7'//分享面板功能，可选

    implementation  'com.umeng.umsdk:share-wx:7.1.7'//微信完整版
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.8.0'//微信官方依赖库，必选

    implementation 'com.umeng.umsdk:share-qq:7.1.7'//QQ完整版
//    implementation files('libs/open_sdk_3.5.8.3_re272d81_lite.jar') //QQ官方依赖库，必选

    implementation 'com.squareup.okhttp3:okhttp:3.14.9'//QQ官方sdk 3.53及之后版本需要集成okhttp3.x，必选

    implementation 'com.umeng.umsdk:share-sina:7.1.7'//新浪微博完整版
    implementation 'io.github.sinaweibosdk:core:11.11.1@aar'//新浪微博官方SDK依赖库，必选

    implementation  'com.umeng.umsdk:share-dingding:7.1.7'//钉钉完整版
    implementation  "com.alibaba.android:ddsharesdk:1.2.0@jar"//钉钉官方依赖库，必选

    implementation  'com.umeng.umsdk:share-alipay:7.1.7'//支付宝完整版
}

flutter {
    source '../..'
}
